version: '3'

services:

# Infrastructure

  router:
    build: ./components/router/
    container_name: router
    restart: always
    volumes:
      - router_data:/opt/pocketsoc-ng/data
    privileged: true
    #cap_add:
    #  - NET_ADMIN
#    networks:
#      - internal
#      - mirror

  documentation_builder:
      build: ./components/documentation_builder/
      container_name: documentation_builder
      restart: always
      volumes:
        - docs_data:/docs
#      networks:
#        - mirror

  documentation:
      build: ./components/documentation/
      container_name: documentation
      restart: always
      depends_on:
        - documentation_builder
      volumes:
        - docs_data:/docs:ro
#      networks:
#        - mirror

# SOC

## OpenSearch
#     build: ./components/opensearch
#     build: ./components/opensearch
#    build: ./components/opensearch_dashboards

  opensearch-node1: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: opensearchproject/opensearch:latest # Specifying the latest available image - modify if you want a specific version
    container_name: opensearch-node1
    restart: always
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node1 # Name the node that will run in this container
      - discovery.seed_hosts=opensearch-node1,opensearch-node2 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}    # Sets the demo admin user password when using demo configuration, required for OpenSearch 2.12 and later
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
      - ${USER_HOME}/pocketsoc-ng/components/opensearch/config/internal_users.yml:/usr/share/opensearch/config/opensearch-security/internal_users.yml
      - ${USER_HOME}/pocketsoc-ng/components/opensearch/config/roles.yml:/usr/share/opensearch/config/opensearch-security/roles.yml
      - ${USER_HOME}/pocketsoc-ng/components/opensearch/config/roles_mapping.yml:/usr/share/opensearch/config/opensearch-security/roles_mapping.yml
      - ${USER_HOME}/pocketsoc-ng/components/opensearch/config/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh
      - ${USER_HOME}/pocketsoc-ng/components/opensearch/bin/adminpassword.sh:/usr/share/opensearch/bin/adminpassword.sh
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    command: >
      bash -c "
      /usr/share/opensearch/opensearch-docker-entrypoint.sh"
#      sleep 30 &&
#      /usr/share/opensearch/plugins/opensearch-security/tools/securityadmin.sh -cd /usr/share/opensearch/config/opensearch-security -icl -nhnv -cacert /usr/share/opensearch/config/root-ca.pem -cert /usr/share/opensearch/config/kirk.pem -key /usr/share/opensearch/config/kirk-key.pem -h localhost -p 9200 &&
#      wait"
#    networks:
#      - opensearch-net # All of the containers will join the same Docker bridge network
  opensearch-node2:
    image: opensearchproject/opensearch:latest # This should be the same image used for opensearch-node1 to avoid issues
    container_name: opensearch-node2
    restart: always
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node2
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data2:/usr/share/opensearch/data
      - ${USER_HOME}/pocketsoc-ng/components/opensearch/config/internal_users.yml:/usr/share/opensearch/config/opensearch-security/internal_users.yml
      - ${USER_HOME}/pocketsoc-ng/components/opensearch/config/roles.yml:/usr/share/opensearch/config/opensearch-security/roles.yml
      - ${USER_HOME}/pocketsoc-ng/components/opensearch/config/roles_mapping.yml:/usr/share/opensearch/config/opensearch-security/roles_mapping.yml
      - ${USER_HOME}/pocketsoc-ng/components/opensearch/config/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh
      - ${USER_HOME}/pocketsoc-ng/components/opensearch/bin/adminpassword.sh:/usr/share/opensearch/bin/adminpassword.sh
    command: >
      bash -c "
      /usr/share/opensearch/opensearch-docker-entrypoint.sh"
#      sleep 30 &&
#      /usr/share/opensearch/plugins/opensearch-security/tools/securityadmin.sh -cd /usr/share/opensearch/config/opensearch-security -icl -nhnv -cacert /usr/share/opensearch/config/root-ca.pem -cert /usr/share/opensearch/config/kirk.pem -key /usr/share/opensearch/config/kirk-key.pem -h localhost -p 9200 &&
#      wait"
#    networks:
#      - mirror

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest # Make sure the version of opensearch-dashboards matches the version of opensearch installed on other nodes
    container_name: opensearch-dashboards
    restart: always
    ports:
      - 5601:5601 # Map host port 5601 to container port 5601
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node1:9200","https://opensearch-node2:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: ${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
    volumes:
    - ${USER_HOME}/pocketsoc-ng/components/opensearch_dashboards/config/opensearch_dashboards.yml:/usr/share/opensearch-dashboards/config/opensearch_dashboards.yml
    - certificates:/usr/share/opensearch-dashboards/config/certs
#    - ${USER_HOME}/root-ca.pem:/usr/share/opensearch-dashboards/config/certs/root-ca.pem
    command: >
      /bin/sh -c "
      sleep 30 &&
      /usr/share/opensearch-dashboards/opensearch-dashboards-docker-entrypoint.sh
      "
#    networks:
#      - mirror

## Logstash

  logstash-zeek:
    build: ./components/logstash-zeek
    restart: always
    container_name: logstash-zeek
    environment:
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: ${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
#        - ELASTIC_PASSWORD=${ADMIN_PASSWORD}
    ports:
      - 5044:5044
#    networks:
#      - mirror


# MISP

  clamav:
    environment:
      - FQDN=${FQDN:-misp.local}
      - HTTPS_PORT=${HTTPS_PORT:-443}
    hostname: ${CLAMAV_HOSTNAME:-misp_clamav}
    image: clamav/clamav:1.0_base
    restart: unless-stopped
    volumes:
      - ./persistent/${COMPOSE_PROJECT_NAME}/clamav_db/:/var/lib/clamav
  db:
    command: [mysqld, --default-authentication-plugin=mysql_native_password, --character-set-server=utf8mb4, --collation-server=utf8mb4_unicode_ci, --innodb_monitor_enable=all]
    environment:
      - FQDN=${FQDN:-misp.local}
      - HTTPS_PORT=${HTTPS_PORT:-443}
      - MYSQL_DATABASE=${MYSQL_DBNAME:-misp}
      - MYSQL_USER=${MYSQL_USERNAME:-misp}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-misp}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-misp}
    hostname: ${MYSQL_HOSTNAME:-misp_db}
    image: mysql/mysql-server:8.0
    restart: unless-stopped
    volumes:
      - ./persistent/${COMPOSE_PROJECT_NAME}/db:/var/lib/mysql
  modules:
    depends_on:
      clamav:
        condition: service_healthy
    environment:
      - FQDN=${FQDN:-misp.local}
      - HTTPS_PORT=${HTTPS_PORT:-443}
    hostname: ${MODULES_HOSTNAME:-misp_modules}
    image: jisccti/misp-modules:latest
    restart: unless-stopped
  redis:
    entrypoint: redis-server --loglevel warning --requirepass ${REDIS_PASSWORD:-misp}
    environment:
      - FQDN=${FQDN:-misp.local}
      - HTTPS_PORT=${HTTPS_PORT:-443}
      - REDISCLI_AUTH=${REDIS_PASSWORD:-misp}
    healthcheck:
      test: redis-cli -e ping || exit 1
    hostname: ${REDIS_HOST:-misp_redis}
    image: redis:7
    restart: unless-stopped
  web:
    depends_on:
      db:
        condition: service_healthy
      modules:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - AUTH_METHOD=${AUTH_METHOD:-misp}
      - CLAMAV_HOSTNAME=${CLAMAV_HOSTNAME:-misp_clamav}
      - FQDN=${FQDN:-${MISP_BASEURL}}
      - GPG_PASSPHRASE=${GPG_PASSPHRASE:-misp}
      - HTTPS_PORT=${HTTPS_PORT:-443}
      - MISP_EMAIL_ADDRESS=${MISP_EMAIL_ADDRESS:-misp@misp.local}
      - MISP_EMAIL_NAME=${MISP_EMAIL_NAME:-MISP}
      - MODULES_HOSTNAME=${MODULES_HOSTNAME:-misp_modules}
      - MYSQL_DBNAME=${MYSQL_DBNAME:-misp}
      - MYSQL_HOSTNAME=${MYSQL_HOSTNAME:-misp_db}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-misp}
      - MYSQL_USERNAME=${MYSQL_USERNAME:-misp}
      - ORG_NAME=${ORG_NAME:-ORGNAME}
      - REDIS_HOST=${REDIS_HOST:-misp_redis}
      - REDIS_MISP_DB=${REDIS_MISP_DB:-2}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-misp}
      - REDIS_WORKER_DB=${REDIS_MISP_DB:-3}
      - REQUIRE_TOTP=${REQUIRE_TOTP:-true}
      - SHIBB_ADMIN_ROLE=${SHIBB_ADMIN_ROLE:-misp-admin}
      - SHIBB_BLOCK_ORG_CHANGE=${SHIBB_BLOCK_ORG_CHANGE:-false}
      - SHIBB_BLOCK_ROLE_CHANGE=${SHIBB_BLOCK_ROLE_CHANGE:-false}
      - SHIBB_DEFAULT_ROLE=${SHIBB_DEFAULT_ROLE:-false}
      - SHIBB_ORG_ADMIN_ROLE=${SHIBB_ORG_ADMIN_ROLE:-misp-orgadmin}
      - SHIBB_PUBLISHER_ROLE=${SHIBB_PUBLISHER_ROLE:-misp-publisher}
      - SHIBB_READONLY_ROLE=${SHIBB_READONLY_ROLE:-misp-readonly}
      - SHIBB_SYNC_ROLE=${SHIBB_SYNC_ROLE:-misp-sync}
      - SHIBB_USER_ROLE=${SHIBB_USER_ROLE:-misp-user}
      - SMTP_HOSTNAME=${SMTP_HOSTNAME:-localhost}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-misp}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_STARTTLS=${SMTP_STARTTLS:-true}
      - SMTP_USERNAME=${SMTP_USERNAME:-misp}
      - WORKERS_HOSTNAME=${WORKERS_HOSTNAME:-misp_workers}
      - WORKERS_PASSWORD=${WORKERS_PASSWORD:-misp}
      - TRUSTED_PROXY=1
    hostname: ${MISP_HOSTNAME:-misp_web}
    image: jisccti/misp-web:latest
    ports:
      - ${HTTP_PORT:-80}:80
      - ${HTTPS_PORT:-443}:443
    restart: unless-stopped
    volumes:
      - ./persistent/${COMPOSE_PROJECT_NAME}/data/:/var/www/MISPData
      - ./persistent/${COMPOSE_PROJECT_NAME}/gpg/:/var/www/MISPGnuPG
      - ./persistent/${COMPOSE_PROJECT_NAME}/tls/:/etc/ssl/private
  workers:
    depends_on:
      web:
        condition: service_started
    environment:
      - FQDN=${FQDN:-misp.local}
      - HTTPS_PORT=${HTTPS_PORT:-443}
      - ORG_NAME=${ORG_NAME:-ORGNAME}
      - ORG_UUID=${ORG_UUID:-XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX}
      - REDIS_HOST=${REDIS_HOST:-misp_redis}
      - WORKERS_PASSWORD=${WORKERS_PASSWORD:-misp}
    hostname: ${WORKERS_HOSTNAME:-misp_workers}
    image: jisccti/misp-workers:latest
    restart: unless-stopped
    volumes:
      - ./persistent/${COMPOSE_PROJECT_NAME}/data/:/var/www/MISPData
      - ./persistent/${COMPOSE_PROJECT_NAME}/gpg/:/var/www/MISPGnuPG

## Zeek

  zeek:
    build: ./components/zeek/
    container_name: zeek
    restart: always
    volumes:
      - zeek_data:/opt/pocketsoc-ng/data
    environment:
        ZEEKHOST: ${HOST_HOSTNAME}
    #privileged: true
    cap_add:
      - NET_ADMIN
#    networks:
#      - mirror

## "Internal"

## Client

  client:
    build: ./components/client/
    container_name: client
    restart: always
    cap_add:
      - NET_ADMIN
    volumes:
      - certificates:/certs
      - client_data:/opt/pocketsoc-ng/data
#    networks:
#      - internal
#      - mirror

# "External"

## Webserver

  webserver:
    build: ./components/webserver/
    container_name: webserver
    restart: always

    cap_add:
      - NET_ADMIN
    volumes:
      - webserver_data:/usr/local/apache2/htdocs/
      - certificates:/certs
#    networks:
#      - internal

### SSHServer
#
#  sshserver:
#    build: ./components/sshserver/
#    container_name: sshserver
#    cap_add:
#      - NET_ADMIN
#    volumes:
#      - sshserver_data:/opt/pocketsoc-ng/data
#    networks:
#      - internal

volumes:
  opensearch-data1:
  opensearch-data2:
  opensearch-dashboards:
  misp_mysql_data:
  misp_data:
  router_data:
  webserver_data:
  client_data:
  sshserver_data:
  zeek_data:
  docs_data:
  certificates:
    external: true

#networks:
#  internal:
#    ipam:
#      config:
#        -
#          subnet: 172.18.0.0/16
#          gateway: 172.18.0.1
#  mirror:
#    ipam:
#      config:
#        -
#          subnet: 172.20.0.0/16
#          gateway: 172.20.0.1
#
